#include "stm32mp157-m4-srm.dtsi"
#include "stm32mp157-m4-srm-pinctrl.dtsi"
#include <dt-bindings/mfd/st,stpmic1.h>
#include <dt-bindings/rtc/rtc-stm32.h>
/ { 
	memory@c0000000 {  
		device_type = "memory";  
		reg = <0xc0000000 0x20000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		mcuram2: mcuram2@10000000 {
				compatible = "shared-dma-pool";
				reg = <0x10000000 0x40000>;
				no-map;
			 };

		vdev0vring0: vdev0vring0@10040000 {
				compatible = "shared-dma-pool";
				reg = <0x10040000 0x1000>;
				no-map;
				 };

		vdev0vring1: vdev0vring1@10041000 {
				 compatible = "shared-dma-pool";
				 reg = <0x10041000 0x1000>;
				 no-map;
			 };

		vdev0buffer: vdev0buffer@10042000 {
				 compatible = "shared-dma-pool";
				 reg = <0x10042000 0x4000>;
				 no-map;
			 };

		mcuram: mcuram@30000000 {
			compatible = "shared-dma-pool";
			reg = <0x30000000 0x40000>;
			no-map;
		};

		retram: retram@38000000 {
			compatible = "shared-dma-pool";
			reg = <0x38000000 0x10000>;
			no-map;
		};
	};

	vin: vin {
			 compatible = "regulator-fixed";
			 regulator-name = "vin";
			 regulator-min-microvolt = <5000000>;
			 regulator-max-microvolt = <5000000>;
			 regulator-always-on;
		 };

	v3v3: regulator-3p3v {
			  compatible = "regulator-fixed";
			  regulator-name = "v3v3";
			  regulator-min-microvolt = <3300000>;
			  regulator-max-microvolt = <3300000>;
			  regulator-always-on;
			  regulator-boot-on;
		  };

	vdd: regulator-vdd { 
			 compatible = "regulator-fixed";
			 regulator-name = "vdd";
			 regulator-min-microvolt = <3300000>;
			 regulator-max-microvolt = <3300000>;
			 regulator-always-on;
			 regulator-boot-on;
		 };

	v3v3_hdmi: regulator-v3v3-hdmi {
			compatible = "regulator-fixed";
			regulator-name = "v3v3_hdmi ";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
			regulator-boot-on;
		};
		
	v1v2_hdmi: regulator-v1v2-hdmi {
		compatible = "regulator-fixed";
		regulator-name = "v1v2_hdmi";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
		regulator-boot-on;
	};
    panel_backlight: panel-backlight {
        compatible = "pwm-backlight";
        pwms = <&pwm2 0 5000000>;
        brightness-levels = <0 4 8 16 32 64 128 255>;
        default-brightness-level = <6>;
        status = "okay";
};

    wifi_pwrseq: wifi-pwrseq {
        compatible = "mmc-pwrseq-simple";
        reset-gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
    };
    v2v8: regulator-2p8v {
        compatible = "regulator-fixed";
        regulator-name = "v2v8";
        regulator-min-microvolt = <2800000>;
        regulator-max-microvolt = <2800000>;
        regulator-always-on;
        regulator-boot-on;
    };

    clocks {
        clk_ext_camera: clk-ext-camera {
        #clock-cells = <0>;
        compatible = "fixed-clock";
        clock-frequency = <24000000>;
        };
    };
};

/*HDMI CEC 控制器*/
&cec {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cec_pins_b>;
	pinctrl-1 = <&cec_pins_sleep_b>;
	status = "okay";
};

/*循环冗余校验计算单元*/
&crc1 {
	status = "okay";
};

&dma1 {
	sram = <&dma_pool>;
};

&dma2 {
	sram = <&dma_pool>;
};
/*数字钟温度传感器*/
&dts {
	status = "okay";
};
/*图像处理单元*/
&gpu {
	contiguous-area = <&gpu_reserved>;
	status = "okay";
};
/*哈希处理器*/
&hash1 {
	status = "okay";
};

/*处理器间通信控制器*/
&ipcc {
	status = "okay";
};

/*看门狗*/
&iwdg2 {
	timeout-sec = <32>;
	status = "okay";
};

/*随机数发生器*/
&rng1 {
	status = "okay";
};

/*实时时钟*/
&rtc {
    st,lsco = <RTC_OUT2_RMP>;
    pinctrl-0 = <&rtc_out2_rmp_pins_a>;
    pinctrl-names = "default";
	status = "okay";
};

/*sdmmc1 TF 卡*/
&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc1_b4_pins_a>;
	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
	cd-gpios = <&gpioh 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	disable-wp;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&v3v3>;
	status = "okay";
};

/*emmc设备树配置*/
&sdmmc2 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_d47_pins_a>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_d47_pins_a>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_d47_sleep_pins_a>;
	non-removable;
	no-sd;
	no-sdio;
	st,neg-edge;
	bus-width = <8>;
	vmmc-supply = <&v3v3>;
	vqmmc-supply = <&vdd>;
	mmc-ddr-3_3v;
	status = "okay";
};

/*
&sdmmc3{
    arm,primecell-periphid = <0x10153180>;
    pinctrl-names = "default", "opendrain", "sleep";
    pinctrl-0 = <&sdmmc3_b4_wifi_pins_a>;
    pinctrl-1 = <&sdmmc3_b4_od_wifi_pins_a>;
    pinctrl-2 = <&sdmmc3_b4_sleep_wifi_pins_a>;
    non-removable;
    st,neg-edge;
    bus-width = <4>;
    vmmc-supply = <&v3v3>;
    mmc-pwrseq = <&wifi_pwrseq>;
    #address-cells = <1>;
    #size-cells = <0>;
    keep-power-in-suspend;
    status = "okay";

    brcmf: bcrmf@1 {
        reg = <1>;
        compatible = "brcm,bcm4329-fmac";
    };
};*/



&sdmmc3 {
    arm,primecell-periphid = <0x10153180>;
    pinctrl-names = "default", "opendrain", "sleep";
    pinctrl-0 = <&sdmmc3_b4_wifi_pins_a>;
    pinctrl-1 = <&sdmmc3_b4_od_wifi_pins_a>;
    pinctrl-2 = <&sdmmc3_b4_sleep_wifi_pins_a>;
    non-removable;
    st,neg-edge;
    bus-width = <4>;
    vmmc-supply = <&v3v3>;
    mmc-pwrseq = <&wifi_pwrseq>;
    #address-cells = <1>;
    #size-cells = <0>;
    keep-power-in-suspend;
    status = "okay";

    brcmf: bcrmf@1 {
        reg = <1>;
        compatible = "brcm,bcm4329-fmac";
    };
};
&sram {
dma_pool: dma_pool@0 {
		  reg = <0x50000 0x10000>;
		  pool;
	  };
};

/*命令行终端*/
&uart4 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&uart4_pins_a>;
	pinctrl-1 = <&uart4_sleep_pins_a>;
	pinctrl-2 = <&uart4_idle_pins_a>;
	pinctrl-3 = <&uart4_pins_a>;
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
};

/*电源基准缓冲器*/
&vrefbuf {
	regulator-min-microvolt = <2500000>;
	regulator-max-microvolt = <2500000>;
	vdda-supply = <&vdd>;
	status = "okay"; 
};

/*网卡驱动设备树配置*/
&ethernet0 {
	status = "okay";
	pinctrl-0 = <&ethernet0_rgmii_pins_a>;
	pinctrl-1 = <&ethernet0_rgmii_pins_sleep_a>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rgmii-id";
	max-speed = <1000>;
	phy-handle = <&phy0>;
	mdio0 {
		#address-cells = <1>;
			#size-cells = <0>;
			compatible = "snps,dwmac-mdio";
			phy0: ethernet-phy@0 {
			reg = <0>;
			};
		};
};

/*HDMI配置*/
&i2c5 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c5_pins_a>;
	pinctrl-1 = <&i2c5_pins_sleep_a>;
	i2c-scl-rising-time-ns = <100>;
	i2c-scl-falling-time-ns = <7>;
	clock-frequency = <100000>;
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
	hdmi-transmitter@39 {
		compatible = "sil,sii9022";
		reg = <0x39>;
		iovcc-supply = <&v3v3_hdmi>;
		cvcc12-supply = <&v1v2_hdmi>;
		reset-gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
		interrupts = <14 IRQ_TYPE_EDGE_FALLING>;
		interrupt-parent = <&gpioa>;
		#sound-dai-cells = <0>;
		status = "okay";
		ports {
			#address-cells = <1>;
			#size-cells = <0>;
			port@0 {
				reg = <0>;
				sii9022_in: endpoint {
					remote-endpoint = <&ltdc_ep0_out>;
					};
				};
			};
		};

    ov5640: camera@3c {
        compatible = "ovti,ov5640";
        reg = <0x3c>;
        clocks = <&clk_ext_camera>;
        clock-names = "xclk";
        DOVDD-supply = <&v2v8>;
        powerdown-gpios = <&gpioa 4 (GPIO_ACTIVE_HIGH | GPIO_PUSH_PULL)>;
        reset-gpios = <&gpioa 3 (GPIO_ACTIVE_LOW | GPIO_PUSH_PULL)>;
        rotation = <180>;
        status = "okay";
        port {
            ov5640_0: endpoint {
            remote-endpoint = <&dcmi_0>;
            bus-width = <8>;
            data-shift = <2>; /* lines 9:2 are used */
            hsync-active = <0>;
            vsync-active = <0>;
            pclk-sample = <1>;
            pclk-max-frequency = <77000000>;
         };
         };
    };
	};
	
&ltdc {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ltdc_pins_b>;
	pinctrl-1 = <&ltdc_pins_sleep_b>;
	status = "okay";
	port {
		#address-cells = <1>;
		#size-cells = <0>;
		ltdc_ep0_out: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&sii9022_in>;
		};
	};
};

&timers2 {
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";
	pwm2: pwm {
		pinctrl-0 = <&pwm2_pins_b>;
		pinctrl-1 = <&pwm2_sleep_pins_b>;
		pinctrl-names = "default", "sleep";
		#pwm-cells = <2>;
		status = "okay";
	};
	timer@2 {
		status = "disabled";
	};
};
&pinctrl {
    usart3_pins_bt: usart3-bt-0 {
    	pins1 {
       		pinmux = <STM32_PINMUX('D', 8, AF7)>, /* USART3_TX */
              <STM32_PINMUX('D', 12, AF7)>; /* USART3_RTS */
       		bias-disable;
       		drive-push-pull;
       		slew-rate = <0>;
    	};
    	pins2 {
       		pinmux = <STM32_PINMUX('D', 9, AF7)>, /* USART3_RX */
              <STM32_PINMUX('D', 11, AF7)>; /* USART3_CTS_NSS */
       		bias-disable;
    	};
	};

	usart3_idle_pins_bt: usart3-idle-bt-0 {
    	pins1 {
        	pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
               <STM32_PINMUX('D', 12, ANALOG)>, /* USART3_RTS */
               <STM32_PINMUX('D', 11, ANALOG)>; /* USART3_CTS_NSS */
    	};
    	pins2 {
        	pinmux = <STM32_PINMUX('D', 9, AF7)>; /* USART3_RX */
        	bias-disable;
    	};
	};

	usart3_sleep_pins_bt: usart3-sleep-bt-0 {
    	pins {
        	pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
                <STM32_PINMUX('D', 12, ANALOG)>, /* USART3_RTS */
                <STM32_PINMUX('D', 11, ANALOG)>, /* USART3_CTS_NSS */
                <STM32_PINMUX('D', 9, ANALOG)>; /* USART3_RX */
    	};
	};

    btreg0: bt_reg_on-0 {
    	pins {
        	pinmux = <STM32_PINMUX('D', 13, GPIO)>;
        	drive-push-pull;
        	bias-pull-up;
        	output-high;
        	slew-rate = <0>;
    	};
	};

    sdmmc3_b4_wifi_pins_a: sdmmc3-b4-wifi-0 {
    	pins1 {
        	pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
             	<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
             	<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
            	<STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
             	<STM32_PINMUX('D', 0, AF10)>; /* SDMMC3_CMD */
        	slew-rate = <1>;
        	drive-push-pull;
        	bias-pull-up;
    	};
    	pins2 {
        	pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
        	slew-rate = <2>;
        	drive-push-pull;
        	bias-pull-up;
    	};
	};

	sdmmc3_b4_od_wifi_pins_a: sdmmc3-b4-od-wifi-0 {
    	pins1 {
        	pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
            	<STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
             	<STM32_PINMUX('D', 5, AF10)>, /* SDMMC3_D2 */
             	<STM32_PINMUX('D', 7, AF10)>; /* SDMMC3_D3 */
        	slew-rate = <1>;
        	drive-push-pull;
        	bias-pull-up;
    	};

    	pins2 {
        	pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
        	slew-rate = <2>;
        	drive-push-pull;
        	bias-pull-up;
    	};

    	pins3 {
        	pinmux = <STM32_PINMUX('D', 0, AF10)>; /* SDMMC2_CMD */
        	slew-rate = <1>;
        	drive-open-drain;
        	bias-pull-up;
    	};
	};

	sdmmc3_b4_sleep_wifi_pins_a: sdmmc3-b4-sleep-wifi-0 {
    	pins {
        	pinmux = <STM32_PINMUX('F', 0, ANALOG)>, /* SDMMC3_D0 */
             	<STM32_PINMUX('F', 4, ANALOG)>, /* SDMMC3_D1 */
             	<STM32_PINMUX('D', 5, ANALOG)>, /* SDMMC3_D2 */
             	<STM32_PINMUX('D', 7, ANALOG)>, /* SDMMC3_D3 */
             	<STM32_PINMUX('G', 15, ANALOG)>, /* SDMMC3_CK */
             	<STM32_PINMUX('D', 0, ANALOG)>; /* SDMMC3_CMD */
    	};
	};


	pwm2_pins_b: pwm2-0 {
		pins {
			pinmux = <STM32_PINMUX('A', 5, AF1)>; /* TIM2_CH1 */
			bias-pull-down;
			drive-push-pull;
			slew-rate = <0>;
		};
	};
	pwm2_sleep_pins_b: pwm1-sleep-0 {
		pins {
		pinmux = <STM32_PINMUX('A', 5, ANALOG)>; /* TIM2_CH1 */
		};
	};
};

&usart3 {
    pinctrl-names = "default", "sleep", "idle";
    pinctrl-0 = <&usart3_pins_bt>;
     pinctrl-1 = <&usart3_idle_pins_bt>;
     pinctrl-2 = <&usart3_sleep_pins_bt>;
     uart-has-rtscts;
     status = "okay";

     bluetooth {
         pinctrl-names = "default";
         pinctrl-0 = <&btreg0>;
         compatible = "brcm,bcm43438-bt";
         max-speed = <3000000>;
         vbat-supply = <&v3v3>;
         vddio-supply = <&v3v3>;
    };
};

&dcmi {
    status = "okay";
    pinctrl-names = "default", "sleep";
    pinctrl-0 = <&dcmi_pins_a>;
    pinctrl-1 = <&dcmi_sleep_pins_a>;
    port {
    dcmi_0: endpoint {
        remote-endpoint = <&ov5640_0>;
        bus-width = <8>;
        hsync-active = <0>;
        vsync-active = <0>;
        pclk-sample = <1>;
        pclk-max-frequency = <77000000>;
        };
    };
};
